
branches:
 only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/  # Also build tags

git:
 submodules: false

language: cpp
dist: trusty

matrix:
 include:
  # GCC Debug
  - os: linux
    addons:
     apt:
      sources:
       - ubuntu-toolchain-r-test
      packages:
       - g++-5
    env:
     - C_COMPILER=gcc-5
     - CXX_COMPILER=g++-5
     - COMPILER_ID=GNU
     - CACHE_FILE="DebugGcc.cmake"
  # GCC Release
  - os: linux
    addons:
     apt:
      sources:
       - ubuntu-toolchain-r-test
      packages:
       - g++-5
    env:
     - C_COMPILER=gcc-5
     - CXX_COMPILER=g++-5
     - COMPILER_ID=GNU
     - CACHE_FILE="ReleaseGcc.cmake"
  # Clang Debug
  - os: linux
    addons:
     apt:
      sources:
       - ubuntu-toolchain-r-test
       - llvm-toolchain-precise-3.8
      packages:
       - clang-3.8
       # Have to install a recent version of libstdc++ (and available libc++ seems not to support C++14?)
       - g++-5
    env:
     - C_COMPILER=clang-3.8
     - CXX_COMPILER=clang++-3.8
     - COMPILER_ID=Clang
     - CACHE_FILE="DebugClang.cmake"
  # Clang Release
  - os: linux
    addons:
     apt:
      sources:
       - ubuntu-toolchain-r-test
       - llvm-toolchain-precise-3.8
      packages:
       - clang-3.8
       # Have to install a recent version of libstdc++ (and available libc++ seems not to support C++14?)
       - g++-5
    env:
     - C_COMPILER=clang-3.8
     - CXX_COMPILER=clang++-3.8
     - COMPILER_ID=Clang
     - CACHE_FILE="ReleaseClang.cmake"

before_install:
 - sudo add-apt-repository --yes ppa:beineri/opt-qt58-trusty
 - sudo apt-get -qq update

install:
 - sudo apt-get install -y cmake
 - sudo apt-get install -y libboost-dev
 - wget http://ftp.de.debian.org/debian/pool/main/p/patchelf/patchelf_0.8-2_amd64.deb
 - sudo dpkg -i patchelf_0.8-2_amd64.deb
 - yes | sudo apt-get install -y qt58base qt58x11extras qt58imageformats qt58svg qt58tools
 - wget https://github.com/scandyna/multidiagtools/releases/download/v0.3.6-rc3/Mdt0-0.3.6-Qt-5.8-Linux-${COMPILER_ID}-x86_64.tar.bz2 -O Mdt.tar.bz2
 - mkdir /opt/Mdt
 - tar -xjf Mdt.tar.bz2 -C /opt/Mdt --strip-components 1
 - cmake -D QT_PREFIX_PATH=/opt/qt58 -P /opt/Mdt/MdtPostInstall.cmake

before_script:
 - "export DISPLAY=:99.0"
 - sudo sh -e /etc/init.d/xvfb start
 - sleep 3 # give xvfb some time to start

script:
 - mkdir build
 - cd build
 - cmake -C ../cmake/caches/${CACHE_FILE} -D CMAKE_C_COMPILER=${C_COMPILER} -D CMAKE_CXX_COMPILER=${CXX_COMPILER} -D MDT_PREFIX_PATH=/opt/Mdt ..
 - make -j4
 - ctest --output-on-failure .

before_deploy:
 - cpack -G TBZ2 .

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: rvTBXONdYa73fpinC+YI7yLTQC7QD3nCojW+EczUGDBQyi06oHM1m5ln/d8qjkBQ/YuDFv3le4DHGZ+n3eSxGgSvtnpu5s2D26o0O1IdcJFsYBm11rVL2taMfwBQTDFHxhj+7h8ryAAD9v+3gfdQu0eUMbU4gHIh8QQU/JcSnVPLzOqh9hS6MsVZC8aHpkMdSDnWW4yDJSsHaW7U1GswPW0rbMjV95budMxe/UcgmynKMbhbWbXxrm1Jt81W60OjD9p7FGJHOqt0LIaTQ2DRuMPhcXDOM1zye9bYmieDHGgFSMRZWti+Sh3ShFJ+ISo4I80sgcqfSSnL2+Aq/S3WCFNxbzRx/ht9oLg5PVLBR/39waH7kqk5bJPcCfdEK7NNiVqfPKw3Q3aCP7Loys8uib5tK5javh2bwGkhTYFPAuZkvisAjo/o4nVco/8ocFCfkj7zVYE+obgnjM9oIJoD3VFk9blP1FnGWbpwymmZUU026xPeln3BMrKBFD6moVRHLTtZjEWx3dUz4ffK5dLxXsHXluAApWIU9cDekHfjtaTdTqKVj98g0IUswH8+BjXJ8V4qC990vGJez1nZ+YM6vi/B2viV59JA8CVtNkgItmMp06Uu+6nq1Kt3mXKALV5lUtOygCFs8wgD2yml1z3amgwo0sMMvxHaAvggA+acVDI=
  file_glob: true
  file: MdtAppExample-*.tar.bz2
  on:
    tags: true
